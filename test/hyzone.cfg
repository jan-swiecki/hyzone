PROJECT_NAME="myproject"

generate_random_prefix

nginx_image="nginx"
app_image="java:8"

app () {

  docker run \
    -v "$gradleCacheDir:/root/.gradle" \
    -v "$(pwd):/opt/app" \
    -w /opt/app \
    $OPTS \
    java App

}

nginx () {
  docker run -d -v "$(pwd):/usr/share/nginx/html:ro" $OPTS
}

updatedb () {

  wait-for-line postgres "database system is ready to accept connections"
  docker run --rm \
    -v "${gradleCacheDir}:/root/.gradle" \
    -v "$(pwd):/api" \
    $OPTS \
    gradle updateDb -Dapp.liquibase.changeLog=liquibase/main.xml -Dapp.jpa.url=jdbc:postgresql://postgres:5432/postgres -Dapp.jpa.username=user -Dapp.jpa.password=password

}

protractor () (
  trap 'service kill' 0 1 3 6

  service run all-if-needed

  service run selenium-hub
  wait-for-line selenium-hub "Selenium Grid hub is up and running"
  service run selenium-chrome
  wait-for-line selenium-chrome "The node is registered to the hub and ready to use"
  service run protractor
)

# psql () {
#   wait-for-line postgres "database system is ready to accept connections"
#   docker exec -
# }